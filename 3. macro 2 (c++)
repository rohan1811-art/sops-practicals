/* pass 2 of macro processor*/
#include<stdio.h>
void main()
{
	int j=0,k;
	char mname[10],word[20];
	FILE *fop,*fmnt,*fmdt,*fir;
	fop=fopen("output.dat","w");		//open output
	fmnt=fopen("mnt.dat","r");		//open mnt table
	fmdt=fopen("mdt.dat","r");		//open mdt table
	fir=fopen("ir.dat","r");		//Intermediate representation
	while(!feof(fir))
	{
		rewind(fmnt);			//restart mnt table
		fgets(word,20,fir);		//read instruction
		fscanf(fmnt,"%d",&k);		//ignore number
		while(!feof(fmnt))
		{		// check if instruction is name of any macro
			fgets(mname,20,fmnt);
			if(!strcmp(word,mname))
			{
				j=1;
				break;		//found macro call
			}
			fscanf(fmnt,"%d",&k);		//again ignore number
		}
		if(j==1)
		{			
			j=0;
			fscanf(fmdt,"%s",mname);	
			while(strcmp(word,mname))
			{		//search same macro name in MDT
				fgets(mname,20,fmdt);
				fscanf(fmdt,"%d",k);		
			}
			fgets(word,20,fmdt);
			while(strcmp(word," MEND\n"))
			{		//found in MDT now copy definition of macro
				fprintf(fop,"%s",word);
				fscanf(fmdt,"%d",&k);
				fgets(word,20,fmdt);
			}
		}
		else			//no macro paste as it is in output
			fprintf(fop,"%s",word);
		}
		printf("action taken");
		getch();

}

# ir.dat

 START 
 MOVER AREG A
 MOVER BREG B
 ADDITION
 STORE X
 A DS 5
 B DC 10
 C DC 15
 END

# mnt.dat 

 1 ADDITION
 2 ADDITION1

# mdt.dat

 1 ADDITION
 2 LOAD A
 3 ADD AREG B
 4 ADD AREG C
 5 MEND
 6 ADDITION1
 7 LOAD A
 8 ADD AREG B
 9 ADD AREG C
 10 MEND
