#include <stdio.h>

int fr[10], cy = 1, frsize, stsize, p[20]; // frame, frame & string size, string

void display() {
    int i;
    printf("\n Cycle: %d \tRequested page: %d\t", cy, p[cy - 1]);
    for (i = 0; i < frsize; i++)
        printf("\t%d", fr[i]);
    cy++;
}

int main() {
    int i, j, ch = 0, fs[10];
    int index = 0, k, l, flag1 = 0, flag2 = 0, pf = 0;

    printf("\nEnter frame size (1-10): ");
    scanf("%d", &frsize);

    printf("\nEnter string length (1-20): ");
    scanf("%d", &stsize);

    printf("\nEnter %d elements of string: ", stsize);
    for (i = 0; i < stsize; i++)
        scanf("%d", &p[i]);

    printf("\nWITH FIFO algorithm");

    do {
        for (i = 0; i < frsize; i++)
            fr[i] = -1;

        index = 0;
        pf = 0;
        cy = 1;

        for (j = 0; j < stsize; j++) {
            flag1 = 0;
            flag2 = 0;

            for (i = 0; i < frsize; i++) {
                if (fr[i] == p[j]) { // Page already present in frame
                    flag1 = 1;
                    flag2 = 1;
                    break;
                }
            }

            if (flag1 == 0) {
                for (i = 0; i < frsize; i++) {
                    if (fr[i] == -1) { // Check for free slot
                        fr[i] = p[j];
                        flag2 = 1;
                        break;
                    }
                }
            }

            if (flag2 == 0) { // Page not present and no free slot
                if (ch == 1) { // LRU algorithm
                    for (i = 0; i < frsize; i++)
                        fs[i] = 0; // Record usage pattern

                    // Check last framesize-1 usage to find LRU frame
                    for (k = j - 1, l = 1; l <= frsize - 1 && k >= 0; l++, k--) {
                        for (i = 0; i < frsize; i++) {
                            if (fr[i] == p[k])
                                fs[i] = 1;
                        }
                    }

                    for (i = 0; i < frsize; i++) {
                        if (fs[i] == 0) { // Replace LRU frame
                            index = i;
                            break;
                        }
                    }

                    fr[index] = p[j];
                } else { // FIFO algorithm
                    fr[index] = p[j];
                    index++;
                    if (index == frsize)
                        index = 0;
                }
                pf++; // Page fault occurred
            }

            display();
        }

        printf("\nNumber of page faults: %d\n", pf);

        if (ch == 0) {
            ch = 1;
            printf("\nWITH LRU algorithm");
        } else {
            break;
        }

    } while (1);

    return 0;
}
